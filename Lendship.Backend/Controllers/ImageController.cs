/*
 * Simple Inventory API
 *
 * This is a simple API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;

namespace Lendship.Backend.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [Authorize]
    [ApiController]
    [Route("[controller]")]
    public class ImageController : ControllerBase
    { 
        /// <summary>
        /// delete images in folder
        /// </summary>
        /// <remarks>Delete images in folder</remarks>
        /// <param name="imgName"></param>
        /// <response code="200">Success</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpDelete]
        public virtual IActionResult DeleteImge([FromQuery][Required()]string imgName)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);


            throw new NotImplementedException();
        }

        /// <summary>
        /// delete images in folder
        /// </summary>
        /// <remarks>Delete images in folder</remarks>
        /// <param name="imgLocation"></param>
        /// <response code="200">Success</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpDelete]
        [Route("list")]
        public virtual IActionResult DeleteImgesFolder([FromQuery][Required()]string imgLocation)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);


            throw new NotImplementedException();
        }

        /// <summary>
        /// get image
        /// </summary>
        /// <remarks>Get image</remarks>
        /// <param name="imgLocation"></param>
        /// <response code="200">Success</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpGet]
        public virtual IActionResult GetImg([FromQuery][Required()]string imgLocation)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(byte[]));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            string exampleJson = null;
            exampleJson = "";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<byte[]>(exampleJson)
            : default(byte[]);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// get images from folder
        /// </summary>
        /// <remarks>Get images from folder</remarks>
        /// <param name="imgLocation"></param>
        /// <response code="200">List of images in the folder</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpGet]
        [Route("list")]
        public virtual IActionResult GetImges([FromQuery][Required()]string imgLocation)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<byte[]>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            string exampleJson = null;
            exampleJson = "";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<byte[]>>(exampleJson)
            : default(List<byte[]>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// upload image
        /// </summary>
        /// <remarks>Upload image</remarks>
        /// <param name="img"></param>
        /// <response code="200">Success</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpPost]
        public virtual IActionResult UploadImg([FromBody]byte[] img)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);


            throw new NotImplementedException();
        }

        /// <summary>
        /// get images
        /// </summary>
        /// <remarks>Get images</remarks>
        /// <param name="imgList"></param>
        /// <response code="200">Success</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpPost]
        [Route("list")]
        public virtual IActionResult UploadImges([FromBody]List<byte[]> imgList)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);


            throw new NotImplementedException();
        }
    }
}
