/*
 * Simple Inventory API
 *
 * This is a simple API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Lendship.Backend.DTO;
using Lendship.Backend.Interfaces.Services;
using System.Collections.Generic;

namespace Lendship.Backend.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [Authorize]
    [ApiController]
    [Route("[controller]")]
    public class NotificationController : ControllerBase
    {
        private readonly INotificationService _notificationService;

        public NotificationController(INotificationService notificationService)
        {
            _notificationService = notificationService;
        }

        /// <summary>
        /// get all notification for the user
        /// </summary>
        /// <remarks>Gets all notification for the user</remarks>
        /// <param name="searchInAdvertisementTitle">search for advertisement</param>
        /// <response code="200">users notifications</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpGet]
        public virtual IActionResult GetAllNotifications([FromQuery] string searchInAdvertisementTitle)
        {
            var notifications = _notificationService.GetAllNotifications(searchInAdvertisementTitle);
            return new ObjectResult(JsonConvert.SerializeObject(notifications));
        }

        /// <summary>
        /// get all new notification for the user
        /// </summary>
        /// <remarks>Gets all new notification for the user</remarks>
        /// <response code="200">users notifications</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpGet]
        [Route("new")]
        public virtual IActionResult GetNewNotifications()
        {
            var notifications = _notificationService.GetNewNotifications();
            return new ObjectResult(JsonConvert.SerializeObject(notifications));
        }

        /// <summary>
        /// update notification new status
        /// </summary>
        /// <remarks>Updates notification new status</remarks>
        /// <response code="201">item updated</response>
        /// <response code="400">bad request</response>
        /// <response code="401"></response>
        [HttpPost]
        public virtual IActionResult UpdateNotification([FromBody]List<int> ids)
        {
            try
            {
                _notificationService.SetSeenNotifications(ids);
                return StatusCode(200);
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception at updating notifications: " + e.Message);
                return this.BadRequest(e.Message);
            }
        }
    }
}
